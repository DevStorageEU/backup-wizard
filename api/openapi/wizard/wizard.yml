openapi: 3.0.3
info:
  version: 1.0.0
  title: Backup Wizard API
  description: An API to communicate with the backup wizard daemon
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: '{server}/v1'
    variables:
      server:
        default: http://localhost:8099
paths:
  /ssh-keys:
    get:
      description: Returns a list of public keys to authorize with servers to be backed up
      operationId: findSSHKeys
      responses:
        '200':
          description: Successfully returned a list of ssh keys
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SSHKey"
  /devices:
    get:
      description: Returns a list of devices
      operationId: findDevices
      responses:
        '200':
          description: Successfully returned a list of devices
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Device"
    post:
      description: Registers a new device
      operationId: registerDevice
      requestBody:
        required: true
        description: Name, kind and IP addresses of the device to be registered
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/RegisterDeviceRequest"
      responses:
        '200':
          description: Successfully registered a new device and returned it
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/Device"
  /devices/{id}:
    get:
      description: Returns the device matching the given id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully returned the device matching the given id
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/Device"

components:
  schemas:
    RegisterDeviceRequest:
      type: object
      properties:
        name:
          type: string
        kind:
          $ref: "#/components/schemas/DeviceKind"
        ips:
          type: array
          items:
            type: string
      required:
        - kind
        - ips
    ProtectionStatus:
      type: string
      enum:
        - ok
        - warning
        - error
    DeviceKind:
      type: string
      enum:
        - server
        - computer
        - mobile
    SSHKey:
      type: string
    Device:
      type: object
      required:
        - id
        - name
        - hostname
        - kind
        - protection
        - cpu
        - ram
        - disks
        - ips
        - agent
        - operatingSystem
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        hostname:
          type: string
        kind:
          $ref: "#/components/schemas/DeviceKind"
        protection:
          $ref: "#/components/schemas/ProtectionStatus"
        lastBackup:
          type: string
          format: date-time
        ips:
          type: array
          items:
            type: string
        agent:
          type: string
        operatingSystem:
          type: string
        cpu:
          type: string
        ram:
          type: string
        disks:
          type: array
          items:
            type: string
    RetentionKind:
      type: string
      enum:
        - hourly
        - daily
        - weekly
        - monthly
    Weekday:
      type: string
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
    Retention:
      type: object
      required:
        - kind
        - amount
      properties:
        kind:
          $ref: "#/components/schemas/RetentionKind"
        amount:
          type: number
          description: The amount of backups to keep
          minimum: 0
    Schedule:
      type: object
      required:
        - kind
        - weekday
        - time
      properties:
        kind:
          $ref: "#/components/schemas/RetentionKind"
        weekday:
          $ref: "#/components/schemas/Weekday"
        time:
          type: string
          format: time
    Policy:
      type: object
      required:
        - id
        - retentions
        - schedules
      properties:
        id:
          type: string
          format: uuid
        retentions:
          type: array
          items:
            $ref: "#/components/schemas/Retention"
        schedules:
          type: array
          items:
            $ref: "#/components/schemas/Schedule"